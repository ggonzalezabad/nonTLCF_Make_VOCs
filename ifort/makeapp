#!/usr/bin/env bash

# ------------------------------------------------------------------------
# Figure out which bit-type of Intel/ifort we are using:
# ------------------------------------------------------------------------
# "ifort -V" contains information on the bit version (32 or 64) currently
# in the path, with "IA-32" indicating 32-bit. We pipe the output into a
# temporary file in the current directory, search for IA-32 in it, and set
# the appropriate variables for futher compiling.
# ------------------------------------------------------------------------
BITVERSION=$(ifort -V > .${PPID} 2>&1; grep IA-32 .${PPID} | wc -l; rm -f .${PPID})
if [ ${BITVERSION} -eq 0 ]; then
   export FLAGS64="-Dtrue64"
   BV=64
else
   export FLAGS64="-Ddummy"
   BV=32
fi

export MACHINE=`uname -a | awk '{print $2}'`
export MAC=`echo $MACHINE | awk '{print substr($0, 0, 3)}'`


export HDF5V=v16
export FLAVOR=linux${BV}

export OMIUTIL=/usr/local/hdfutils/${BV}bit
source ${OMIUTIL}/toolkit_${HDF5V}/bin/${FLAVOR}/pgs-dev-env.ksh
export MACHINE=`uname -a | awk '{print $2}'`

export SAOPGE=`(cd ../; pwd | awk -F "/" '{print $NF}')`
echo 'Compiling' ${SAOPGE}'.exe on' ${MACHINE} 'in' ${BV}-bit

export PGEHOME=`pwd`/..
export PGS_PC_INFO_FILE=${PGEHOME}/src/${SAOPGE}.pcf
export PGEVERSION=`grep PGEVERSION $PGS_PC_INFO_FILE|sed 's/\"//g'|sed 's/|/ /g'|awk '{print $3}'`
export PGEIODIR=${PGEHOME}/out
export OMISAOSHARED=../../OMI_SAO_Shared
export UTDATADIR=/home/tkurosu/Instruments/OMI/UTdata
export UTDATAINS=${UTDATADIR}/${SAOPGE}/inputs.v${PGEVERSION}
export UTDATAOUT=${UTDATADIR}/${SAOPGE}/output.v${PGEVERSION}

export MACHSHELL=/usr/bin/ksh
export PGSMSG=${PGEHOME}/bin
export MKFDIR=`pwd`/../../nonTLCF_Make
gmake --warn-undefined-variables -f ${MKFDIR}/Makefile.non-TLCF $1
echo 'EXIT VALUE of Make Process is ' `echo $?`
